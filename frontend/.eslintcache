[{"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\reportWebVitals.js":"1","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\index.js":"2","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\App.js":"3","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Footer.jsx":"4","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Header.jsx":"5","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\HomeScreen.jsx":"6","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Product.jsx":"7","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Rating.jsx":"8","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\products.js":"9","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\ProductScreen.jsx":"10","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\reducers\\productReducer.js":"11","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\store.js":"12","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\actions\\productActions.js":"13","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Loader.jsx":"14","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\constants\\productConstants.js":"15","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Message.jsx":"16","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\reducers\\cartReducers.js":"17","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\CartScreen.jsx":"18","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\actions\\cartActions.js":"19","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\constants\\cartConstants.js":"20","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\reducers\\userReducers.js":"21","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\LoginScreen.jsx":"22","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\actions\\userActions.js":"23","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\constants\\userConstants.js":"24","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\RegisterScreen.jsx":"25","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\ProfileScreen.jsx":"26","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\FormContainer.jsx":"27","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\ShippingScreen.jsx":"28","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\CheckoutSteps.jsx":"29","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\PaymentScreen.jsx":"30","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\PlaceOrderScreen.jsx":"31","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\reducers\\orderReducers.js":"32","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\actions\\orderActions.js":"33","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\constants\\orderConstants.js":"34","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\OrderScreen.jsx":"35","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\UserListScreen.jsx":"36","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\UserEditScreen.jsx":"37","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\ProductListScreen.jsx":"38","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\ProductEditScreen.jsx":"39","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\OrderListScreen.jsx":"40","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\SearchBox.jsx":"41","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Paginate.jsx":"42"},{"size":362,"mtime":1606285943576,"results":"43","hashOfConfig":"44"},{"size":597,"mtime":1609154628019,"results":"45","hashOfConfig":"44"},{"size":2604,"mtime":1609249307618,"results":"46","hashOfConfig":"44"},{"size":430,"mtime":1608279476815,"results":"47","hashOfConfig":"44"},{"size":3527,"mtime":1609228791609,"results":"48","hashOfConfig":"44"},{"size":1658,"mtime":1609237797531,"results":"49","hashOfConfig":"44"},{"size":929,"mtime":1608449623343,"results":"50","hashOfConfig":"44"},{"size":2256,"mtime":1608285676662,"results":"51","hashOfConfig":"44"},{"size":2486,"mtime":1608456538233,"results":"52","hashOfConfig":"53"},{"size":8708,"mtime":1609227037479,"results":"54","hashOfConfig":"44"},{"size":5588,"mtime":1609251897017,"results":"55","hashOfConfig":"44"},{"size":2749,"mtime":1609251945582,"results":"56","hashOfConfig":"44"},{"size":6275,"mtime":1609252067460,"results":"57","hashOfConfig":"44"},{"size":408,"mtime":1608807794263,"results":"58","hashOfConfig":"44"},{"size":1550,"mtime":1609251292676,"results":"59","hashOfConfig":"44"},{"size":299,"mtime":1608635744062,"results":"60","hashOfConfig":"44"},{"size":1470,"mtime":1608879305602,"results":"61","hashOfConfig":"44"},{"size":4550,"mtime":1608709175109,"results":"62","hashOfConfig":"44"},{"size":1388,"mtime":1608879274699,"results":"63","hashOfConfig":"44"},{"size":240,"mtime":1608879227414,"results":"64","hashOfConfig":"44"},{"size":5009,"mtime":1608994424062,"results":"65","hashOfConfig":"44"},{"size":2485,"mtime":1608799201355,"results":"66","hashOfConfig":"44"},{"size":7569,"mtime":1608995251466,"results":"67","hashOfConfig":"44"},{"size":1532,"mtime":1608994158310,"results":"68","hashOfConfig":"44"},{"size":3693,"mtime":1608807486329,"results":"69","hashOfConfig":"44"},{"size":6605,"mtime":1608969055751,"results":"70","hashOfConfig":"44"},{"size":446,"mtime":1608797574530,"results":"71","hashOfConfig":"44"},{"size":3217,"mtime":1608876980264,"results":"72","hashOfConfig":"44"},{"size":1494,"mtime":1608888160241,"results":"73","hashOfConfig":"44"},{"size":2518,"mtime":1608879745966,"results":"74","hashOfConfig":"44"},{"size":6744,"mtime":1608900100581,"results":"75","hashOfConfig":"44"},{"size":4553,"mtime":1609167164212,"results":"76","hashOfConfig":"44"},{"size":6145,"mtime":1609167447989,"results":"77","hashOfConfig":"44"},{"size":1314,"mtime":1609167153354,"results":"78","hashOfConfig":"44"},{"size":9754,"mtime":1609168522322,"results":"79","hashOfConfig":"44"},{"size":3729,"mtime":1608992492979,"results":"80","hashOfConfig":"44"},{"size":3460,"mtime":1608995774203,"results":"81","hashOfConfig":"44"},{"size":4944,"mtime":1609249428060,"results":"82","hashOfConfig":"44"},{"size":6876,"mtime":1609155936964,"results":"83","hashOfConfig":"44"},{"size":3594,"mtime":1609166483415,"results":"84","hashOfConfig":"44"},{"size":923,"mtime":1609229832487,"results":"85","hashOfConfig":"44"},{"size":779,"mtime":1609249500631,"results":"86","hashOfConfig":"44"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"89"},"1n9imdu",{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"148x90h",{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"135"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"92"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"92"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"166","messages":"167","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"170","messages":"171","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"172","messages":"173","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\reportWebVitals.js",[],["178","179"],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\index.js",[],["180","181"],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\App.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Footer.jsx",[],["182","183"],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Header.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\HomeScreen.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Product.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Rating.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\products.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\ProductScreen.jsx",["184"],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\reducers\\productReducer.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\store.js",["185"],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\actions\\productActions.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Loader.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\constants\\productConstants.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Message.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\reducers\\cartReducers.js",[],["186","187"],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\CartScreen.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\actions\\cartActions.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\LoginScreen.jsx",[],["188","189"],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\actions\\userActions.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\constants\\userConstants.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\RegisterScreen.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\ProfileScreen.jsx",["190"],"import React, {useState, useEffect} from 'react';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { listMyOrders } from '../actions/orderActions';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\n\r\nconst ProfileScreen = ({location, history}) => {\r\n\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n    const [message, setMessage] = useState(null);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userDetails = useSelector(state => state.userDetails);\r\n    const { loading, error, user } = userDetails;\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;\r\n    \r\n    const userUpdateProfile = useSelector(state => state.userUpdateProfile);\r\n    const { success } = userUpdateProfile;\r\n\r\n    const orderListMy = useSelector(state => state.orderListMy);\r\n    const { loading : loadingOrders, error : errorOrders, orders } = orderListMy;\r\n\r\n    useEffect(() => {\r\n        if(!userInfo) {\r\n            history.push('/login');\r\n        }else{\r\n            if(!user.name || !user  || success){\r\n                dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n                dispatch(getUserDetails('profile'));\r\n                dispatch(listMyOrders());\r\n            }else{\r\n                setName(user.name);\r\n                setEmail(user.email);\r\n            }\r\n        }\r\n    }, [ user, dispatch, history, userInfo]);\r\n \r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if(password !== confirmPassword){\r\n            setMessage('Passwords do not match');\r\n        }else{\r\n            dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={3}>\r\n            <h2>User Profile</h2>\r\n            { error && <Message variant='danger'>{error}</Message> }\r\n            { message && <Message variant='danger'>{message}</Message> }\r\n            { success && <Message variant='success'>Profile Updated</Message> }\r\n           { loading && <Loader/> }\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>Name</Form.Label>\r\n                    <Form.Control\r\n                     type='text' \r\n                     placeholder='Enter name' \r\n                     value={name}\r\n                     onChange={(e) => setName(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='email'>\r\n                    <Form.Label>Email Address</Form.Label>\r\n                    <Form.Control\r\n                     type='email' \r\n                     placeholder='Enter email' \r\n                     value={email}\r\n                     onChange={(e) => setEmail(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='password'>\r\n                    <Form.Label>Password</Form.Label>\r\n                    <Form.Control\r\n                     type='password'\r\n                     placeholder='Enter password'\r\n                     value={password}\r\n                     onChange={(e) => setPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='confirmPassword'>\r\n                    <Form.Label>Confirm password</Form.Label>\r\n                    <Form.Control\r\n                     type='password'\r\n                     placeholder='Enter Password'\r\n                     value={confirmPassword}\r\n                     onChange={(e) => setConfirmPassword(e.target.value)}>\r\n                    </Form.Control>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>Update</Button>\r\n            </Form>\r\n            </Col>\r\n\r\n            <Col md={9}>\r\n                <h2>My Orders</h2>\r\n                {\r\n                    loadingOrders ? <Loader /> : errorOrders ? <Message variant='danger'>{errorOrders}</Message> : (\r\n                        <Table striped bordered hover responsive className='table-sm'>\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>    \r\n                                    <th>DATE</th>    \r\n                                    <th>TOTAL</th>    \r\n                                    <th>PAID</th>    \r\n                                    <th>DELIVERED</th>\r\n                                    <th></th>    \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    orders.map(order => (\r\n                                        <tr key={order._id}>\r\n                                            <td>{order._id}</td>\r\n                                            <td>{order.createdAt.substring(0,10)}</td>\r\n                                            <td>{order.totalPrice}</td>\r\n                                            <td>{order.isPaid ? order.paidAt.substring(0,10): <i className='fas fa-times' style={{color: 'red'}}></i>}</td>\r\n                                            <td>{order.isDelivered ? order.deliveredAt.substring(0,10): <i className='fas fa-times' style={{color: 'red'}}></i>}</td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/order/${order._id}`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        Details\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n\r\n                        </Table>\r\n                    )\r\n                }\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\FormContainer.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\ShippingScreen.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\CheckoutSteps.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\PaymentScreen.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\PlaceOrderScreen.jsx",["191"],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\actions\\orderActions.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\OrderScreen.jsx",["192"],"import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport {  Button, Col, Row, ListGroup, Image, Card  } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { \r\n    getOrderDetails,\r\n    payOrder,\r\n    deliverOrder,\r\n} from '../actions/orderActions';\r\nimport { \r\n    ORDER_PAY_RESET, \r\n    ORDER_DELIVER_RESET,\r\n} from '../constants/orderConstants';\r\n\r\nconst OrderScreen = ({match, history}) => {\r\n\r\n    const orderId = match.params.id;\r\n\r\n    const [sdkReady, setSdkReady] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const userLogin = useSelector(state => state.userLogin);\r\n    const { userInfo } = userLogin;  \r\n\r\n    const orderDetails = useSelector(state => state.orderDetails);\r\n    const { order, loading, error } = orderDetails;\r\n\r\n    const orderPay = useSelector(state => state.orderPay);\r\n    const { success : successPay, loading : loadingPay } = orderPay;\r\n    \r\n    const orderDeliver = useSelector(state => state.orderDeliver);\r\n    const { success : successDeliver, loading : loadingDeliver } = orderDeliver;\r\n\r\n    // // Calculate Prices\r\n    const addDecimals = (num) => (Math.round(num * 100) / 100 ).toFixed(2);\r\n  \r\n    if(order){\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => acc+ (item.price * item.qty ), 0))\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if(!userInfo){\r\n            history.push('/login');\r\n        }\r\n\r\n        const addPayPalScript = async() =>{\r\n            const { data: clientId } = await axios.get('/api/config/paypal');\r\n            const script = document.createElement('script');\r\n            script.type = 'text/javascript';\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}&currency=INR`;\r\n            script.async = true;\r\n            script.onload = () => {\r\n                setSdkReady(true);\r\n            }\r\n\r\n            document.body.appendChild(script);\r\n        }\r\n\r\n        if(!order || order._id !== orderId || successPay || successDeliver) {\r\n            \r\n            dispatch({ type: ORDER_PAY_RESET });\r\n            dispatch({ type: ORDER_DELIVER_RESET });\r\n\r\n            dispatch(getOrderDetails(orderId));\r\n\r\n        }else if(!order.isPaid){\r\n            if(!window.paypal){\r\n                addPayPalScript();\r\n            }else{\r\n                setSdkReady(true);\r\n            }\r\n        }\r\n\r\n    }, [dispatch, orderId, order, successPay, successDeliver ]);\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        console.log(paymentResult);\r\n        \r\n        dispatch(payOrder(orderId, paymentResult));\r\n    }\r\n\r\n    const deliverHander = () => {\r\n        dispatch(deliverOrder(orderId));\r\n    }\r\n\r\n    return loading ? <Loader /> : error ? <Message variant='danger'>{error}</Message> : (\r\n        <>\r\n            <h1>Order {order._id}</h1>\r\n\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup>\r\n                        <ListGroup.Item variant='flush'>\r\n                            <h2>Shipping</h2>\r\n\r\n                            <p>\r\n                                <strong>Name: </strong>\r\n                                {order.user.name}\r\n                            </p>\r\n\r\n                            <p>\r\n                                 <strong>Email: </strong>\r\n                                 <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                            </p>\r\n\r\n                            <p>\r\n                                <strong>Address: </strong>\r\n                                { order.shippingAddress.address },\r\n                                { order.shippingAddress.city },\r\n                                { order.shippingAddress.postalCode },\r\n                                { order.shippingAddress.country },\r\n                            </p>\r\n                            {\r\n                                order.isDelivered ? <Message variant='success'>Delivered on {order.deliveredAt}</Message> : <Message variant='danger'>Not delivered</Message>\r\n                            }\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Payment Method</h2>\r\n                            <p>\r\n                            <strong>Method: </strong>\r\n                            { order.paymentMethod }\r\n                            </p>\r\n                            { order.isPaid ? <Message variant='success'>Paid on {order.paidAt}</Message> : <Message variant='danger'>Not Paid</Message>}\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Order Items</h2>\r\n                            { order.orderItems.length === 0 ? <Message>Order is empty</Message> : (\r\n\r\n                                <ListGroup variant='flsuh'>\r\n                                    {\r\n                                        order.orderItems.map((item, index) => (\r\n                                            <ListGroup.Item key={index}>\r\n                                                <Row>\r\n                                                    <Col md={1}>\r\n                                                      <Image src={item.image} alt={item.name} fluid rounded/>  \r\n                                                    </Col>\r\n                                                    <Col>\r\n                                                      <Link to={`/product/${item.product}`} >\r\n                                                      { item.name }    \r\n                                                      </Link>\r\n                                                    </Col>\r\n                                                    <Col md={4}>\r\n                                                        {item.qty} x {item.price} = {item.qty * item.price}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n                                        ))\r\n                                    }\r\n                                </ListGroup>\r\n                            )\r\n                            }\r\n                           \r\n                        </ListGroup.Item>\r\n\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n\r\n                            <ListGroup.Item>\r\n                                <h2>Order Summary</h2>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                   <Col>Items</Col> \r\n                                   <Col>${order.itemsPrice}</Col> \r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                   <Col>Shpping</Col> \r\n                                   <Col>${order.shippingPrice}</Col> \r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                   <Col>Tax</Col> \r\n                                   <Col>${order.taxPrice}</Col> \r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                   <Col>Total</Col> \r\n                                   <Col>${order.totalPrice}</Col> \r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            {\r\n                               !order.isPaid && (\r\n                                   <ListGroup.Item>\r\n                                       {loadingPay && <Loader/>}\r\n                                       {\r\n                                       !sdkReady ? \r\n                                       <Loader /> :\r\n                                       (\r\n                                        <PayPalButton\r\n                                        currency='INR'\r\n                                        amount={order.totalPrice} \r\n                                        onSuccess={successPaymentHandler}\r\n                                       />\r\n                                       )}\r\n                                   </ListGroup.Item>\r\n                               )\r\n                            }\r\n\r\n                            { loadingDeliver && <Loader/> }\r\n\r\n                            {\r\n                              userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered ?\r\n                                <ListGroup.Item>\r\n                                    <Button \r\n                                        type='button'\r\n                                        className='btn btn-block'\r\n                                        onClick={deliverHander}\r\n                                    >\r\n                                        Mark As Delivered\r\n                                    </Button>\r\n                                </ListGroup.Item> : <></>\r\n                            }\r\n\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen;\r\n","C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\UserListScreen.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\UserEditScreen.jsx",["193"],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\ProductListScreen.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\ProductEditScreen.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\screens\\OrderListScreen.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\SearchBox.jsx",[],"C:\\Users\\prash\\Desktop\\MERN eCommerce\\frontend\\src\\components\\Paginate.jsx",[],{"ruleId":"194","replacedBy":"195"},{"ruleId":"196","replacedBy":"197"},{"ruleId":"194","replacedBy":"198"},{"ruleId":"196","replacedBy":"199"},{"ruleId":"194","replacedBy":"200"},{"ruleId":"196","replacedBy":"201"},{"ruleId":"202","severity":1,"message":"203","line":32,"column":22,"nodeType":"204","messageId":"205","endLine":32,"endColumn":42},{"ruleId":"202","severity":1,"message":"206","line":13,"column":5,"nodeType":"204","messageId":"205","endLine":13,"endColumn":27},{"ruleId":"194","replacedBy":"207"},{"ruleId":"196","replacedBy":"208"},{"ruleId":"194","replacedBy":"209"},{"ruleId":"196","replacedBy":"210"},{"ruleId":"211","severity":1,"message":"212","line":46,"column":8,"nodeType":"213","endLine":46,"endColumn":44,"suggestions":"214"},{"ruleId":"202","severity":1,"message":"215","line":1,"column":17,"nodeType":"204","messageId":"205","endLine":1,"endColumn":25},{"ruleId":"211","severity":1,"message":"216","line":80,"column":8,"nodeType":"213","endLine":80,"endColumn":63,"suggestions":"217"},{"ruleId":"211","severity":1,"message":"218","line":42,"column":8,"nodeType":"213","endLine":42,"endColumn":41,"suggestions":"219"},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],["220"],["221"],["220"],["221"],"no-unused-vars","'loadingProductReview' is assigned a value but never used.","Identifier","unusedVar","'productTopRatedReducer' is defined but never used.",["220"],["221"],["220"],["221"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'success'. Either include it or remove the dependency array.","ArrayExpression",["222"],"'useState' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'userInfo'. Either include them or remove the dependency array.",["223"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["224"],"no-global-assign","no-unsafe-negation",{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [user, dispatch, history, userInfo, success]",{"range":"231","text":"232"},"Update the dependencies array to be: [dispatch, orderId, order, successPay, successDeliver, userInfo, history]",{"range":"233","text":"234"},"Update the dependencies array to be: [user, dispatch, userId, success, history]",{"range":"235","text":"236"},[1818,1854],"[user, dispatch, history, userInfo, success]",[2606,2661],"[dispatch, orderId, order, successPay, successDeliver, userInfo, history]",[1463,1496],"[user, dispatch, userId, success, history]"]